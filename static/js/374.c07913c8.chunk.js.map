{"version":3,"file":"static/js/374.c07913c8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsForm\":\"ContactForm_contactsForm__6k3Pf\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__+ADVC\",\"contactsFormInput\":\"ContactForm_contactsFormInput__jGZ7D\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const selectItems = state => state.contacts.contacts.items;\r\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\r\nexport const selectError = state => state.contacts.contacts.error;\r\nexport const selectFilter = state => state.contacts.filter;\r\n\r\nexport const selectVisibleContacts = createSelector(\r\n  [selectItems, selectFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from '../../redux/contactsSelectors';\nimport { addContact } from '../../redux/contactsReducer';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n\n  const handleContactsInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'number':\n        setNumber(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = contactData => {\n    const hasContactDuplicate = contacts.some(\n      contact => contact.name.toLowerCase() === contactData.name.toLowerCase()\n    );\n\n    if (hasContactDuplicate) {\n      return toast.warning(`${contactData.name} is already in contacts`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'light',\n        toastId: 'errorMessage',\n      });\n    }\n\n    dispatch(addContact(contactData));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    handleAddContact(contact);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.contactsForm}>\n        <label>\n          Name\n          <input\n            className={css.contactsFormInput}\n            onChange={handleContactsInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            placeholder=\"Ivan Ivanov\"\n            required\n          />\n        </label>\n        <label>\n          Phone\n          <input\n            className={css.contactsFormInput}\n            onChange={handleContactsInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            placeholder=\"123-45-67\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.contactsFormBtn}>\n          Add contact\n        </button>\n      </form>\n      <ToastContainer />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"deleteBtn\":\"ContactListItem_deleteBtn__roUYm\"};","import css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({\n  contactId,\n  contactName,\n  contactNumber,\n  deleteContact,\n}) => {\n  return (\n    <li className={css.contactListItem}>\n      <span>{`${contactName}: `}</span>\n      <span>{contactNumber}</span>\n      <button\n        className={css.deleteBtn}\n        onClick={() => deleteContact(contactId)}\n        type=\"button\"\n        name={contactId}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from '../../redux/contactsReducer';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { selectVisibleContacts } from '../../redux/contactsSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contactsArr = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const hanldeDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul>\n      {contactsArr.length !== 0 &&\n        contactsArr.map(contact => {\n          const { id, name, number } = contact;\n          return (\n            <ContactListItem\n              key={id}\n              contactId={id}\n              contactName={name}\n              contactNumber={number}\n              deleteContact={hanldeDeleteContact}\n            />\n          );\n        })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"div\":\"Filter_div__h0z7C\",\"title\":\"Filter_title__pSkfx\"};","import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/contactsReducer';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterInputChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <div className={css.div}>\n      <h3 className={css.title}>Fined contacts by name</h3>\n      <input\n        className={css.filterInput}\n        onChange={handleFilterInputChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\nimport { Filter } from 'components/Filter/Filter';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { useSelector } from 'react-redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { selectError, selectIsLoading } from '../redux/contactsSelectors';\r\n\r\nconst Contacts = () => {\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n      {isLoading && <Loader />}\r\n      {error && <ToastContainer />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"names":["selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleContactsInputChange","event","target","value","onSubmit","preventDefault","contactData","some","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","toastId","addContact","handleAddContact","className","css","onChange","type","pattern","title","placeholder","required","ContactListItem","contactId","contactName","contactNumber","deleteContact","onClick","ContactList","contactsArr","useEffect","fetchContacts","hanldeDeleteContact","length","map","id","Filter","setFilter","Loader"],"sourceRoot":""}